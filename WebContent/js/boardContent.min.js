$(async function() {
		
		// ajax에서 동일하게 사용되는 속성 설정
		$.ajaxSetup({
			// ajax에서 한글 깨짐 문제 해결
			contentType : "application/x-www-form-urlencoded;charset=UTF-8",
			type : "post"
		});
		
		
		// BOARD 테이블의 전체 데이터를 가져오는 함수.
		 async function getList() {
			
			 await $.ajax({
				url : "reply_list.do",
				data : {
					no : bno,
					type : type,
					nickname : nickname
					},
				datatype : "xml", 
				success : function(data) {
					
					$(".list table").remove();
					
					let xmlData = $.parseXML(data);
					let nickname = $(xmlData).find("nickname").text();
					let replies = $(xmlData).find("reply_list");
					
					let table = "";
					
					replies.find("reply").each(function() {
						
						table += "<table border='0' cellspacing='0' width='1000'>";
						table += "<tr>";
						table += "<td width='150'>"+$(this).find("comment_date").text()+"</td>"
						table += "<td width='100' class='comment_nickname'>"+$(this).find("comment_writer_nickname").text()+"</td>";
						table += "<td width='500' onmouseleave='return_box(this)' onmouseenter=\"change_box(\'"+$(this).find("comment_writer_nickname").text()+"\',this)\" class='cont' style='width: 400px'>"+$(this).find("comment_cont").text().replace(/\n/g, "<br>")+"</td>";
						
						if( $(this).find("comment_writer_nickname").text() == nickname ) {
							table += "<td width='75'> <input type='button' class='modify' value='수정하기' index='"+$(this).find("comment_index").text()+"'> </td>";
							table += "<td width='75'> <input type='button' class='delete' value='삭제' index='"+$(this).find("comment_index").text()+"'> </td>";
						}else {
							table += "<td width='75'> </td>";
							table += "<td width='75'> </td>";
						}
						
						table += "</tr>";
						table += "</table>";
						
					});
					
					$(".list").append(table);
				},
				
				error : function() {
					alert("데이터 통신 오류입니다!!!.~~~");
				}
			});
			
		}  // getList() 함수 end
   
      
		        
		// 댓글 작성 버튼을 눌렀을 때 DB에 댓글이 저장.
		$("#replyBtn").on("click", function() {
			
			$.ajax({
				url : "reply_insert_ok.do",
				data : {	
						  writer_id: member_id,
						  writer_nickname: nickname,
					      cont: $("#re_content").val(),
					      bno: bno,
					      type: type
						},
				datatype : "html",
				success : function(data) {
					if(data > 0) {
						alert("댓글 작성 완료!!!");
						
						getList();
						
						$("#re_content").val("");  
						
					}else {
						alert("댓글 작성이 실패 하였습니다.~~~");
					}
				},
				
				error : function() {
					alert("데이터 통신 오류입니다.~~~");
				}
			});
		});
		
		$(".list").on("click", ".delete", function() {
			$.ajax({
				type : "post",
				url : "reply_delete.do",
				data : {
					reply_index : $(this).attr("index"),
					member_id : member_id,
					type : type
				},
				datatype : "text",
				success : function(data) {
					if(data > 0) {
						alert("댓글 삭제 완료");
						getList();
					}else {
						alert("삭제 권한이 없습니다.");
					}
				},
				error : function() {
					alert("데이터 통신 오류입니다!!!.~~~");
				}
			});
		});	
		
		await getList();
		await thumbsCount();
		
		
	}); // onload end 
	
	function return_box(self){
		if($(self).find('textarea').length>0){
			let editedText = $(self).find('textarea').val();
	        $(self).html(editedText.trim().replace(/\n/g, "<br>"));
		}
	}
	function change_box(d, self) {
		if($("#hidden_nickname").val()==d){
			let text = $(self).html();
            let textarea = $('<textarea />', { 'class': 'cont', 'style': 'width: 450px; height: auto' });
            textarea.val(text.trim().replace(/<br>/g, '\n'));
            $(self).html(textarea);
            textarea.focus();
		}
	}
	
	
	async function thumbsCount() {
		await $.ajax({
			url: "board_thumbs_count.do",
			data: {
				no: bno,
				type: type
			},
			success: function(count) {
				$(".thumbs").html(count);
			},
			error: function() {
				alert("데이터 통신 오류입니다!");
			}
		});
	}
	
	function thumbsClick() {
		$.ajax({
			url : "board_thumbs.do",
			data : {
				no : bno,
				id : member_id,
				board_id : writer_id,
				type : type
			},
			datatype: "html",
			success : function(data) {
				
				if(data.trim() === 'cancel') {
					alert('좋아요를 취소하셨습니다.');
				}else {
					alert('좋아요를 누르셨습니다.');
				}
				
				
				thumbsCount();
			},
			error : function() {
				alert('데이터 통신 오류입니다.');
			}
		});
	}
	
	
	
	 /*  $(document).on('mouseenter', '.cont', function() {
      	
     	 if ($(this).text() == $("#hidden_nickname").val()) {
		    	
     		var text = $(this).html().trim().replace(/<br>/g, '\n');
	            var textarea = $('<textarea />', { 'class': 'cont', 'style': 'width: 450px; height: auto' });
	            textarea.val(text);
	            $(this).html(textarea);
	            textarea.focus();
	           
	            
     	 }
     });
    
     $(document).on('mouseleave', '.cont', function() {
         var editedText = $(this).find('textarea').val().trim().replace(/\n/g, "<br>");
         $(this).html(editedText);
     }); */
	
		
	
		
	$(".list").on("click", ".modify", function() {
		$.ajax({
			type : "post",
			url : "reply_modify.do",
			data : {
				reply_index : $(this).attr("index"),
				member_id : member_id,
				comment_cont : $(".cont").val(),
				type : type
			},
			datatype : "text",
			success : function(data) {
				if(data > 0) {
					alert("댓글 수정 완료");
					getList();
				}else {
					alert("본인이 작성한 댓글이 아닙니다");
				}
			},
			error : function() {
				alert("데이터 통신 오류입니다!!!.~~~");
			}
		});
	});
	
	
	
		 
